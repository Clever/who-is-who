run:
  type: docker
env:
  - PORT
  - AWS_DYNAMO_ENDPOINT
  - AWS_DYNAMO_REGION
  - TABLE_NAME_SUFFIX
  - DYNAMO_TABLE_PREFIX
  - DYNAMO_READ_WRITE_CAPACITY
resources:
  cpu: 0.5
  max_mem: 1.0
expose:
  - name: default
    port: 80
    health_check:
      type: http
      path: /health
team: eng-security
access_groups:
  - everyone
aws:
  dynamodb:
    read:
      - dynamodb:us-west-2:{env}--who-is-who-db-us-west-2-Paths
      - dynamodb:us-west-2:{env}--who-is-who-db-us-west-2-History
      - dynamodb:us-west-2:{env}--who-is-who-db-us-west-2-Objects
    write:
      - dynamodb:us-west-2:{env}--who-is-who-db-us-west-2-Paths
      - dynamodb:us-west-2:{env}--who-is-who-db-us-west-2-History
      - dynamodb:us-west-2:{env}--who-is-who-db-us-west-2-Objects
alarms:
  - type: InternalErrorAlarm
    severity: major
    parameters:
      threshold: 0.5
pod_config:
  group: us-west-2 # same region as its DynamoDBs
deploy_config:
  blockDevDeploys: true
  canaryInProd: false
  autoDeployEnvs:
    - clever-dev
    - production
